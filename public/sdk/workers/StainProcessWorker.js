function getMaxMin(f){let e=Number.MAX_SAFE_INTEGER,t=Number.MIN_SAFE_INTEGER;for(let a=0;a<f.length;a++)e=Math.min(f[a],e),t=Math.max(f[a],t);return[e,t]}function mix(f,e){const t=f%e;return t*e<0?t+e:t}function process(f,e,t,a,i,g){const[b,L,y,x]=f,E=y-b,A=L-x;e=Math.floor(e),t=Math.floor(t);const r=e,d=t,k=E/e,q=A/t;let G=[],N=[],S=[],_=[],R=[],h=0,w=0,v=0,C=0;[h,w]=getMaxMin(a),i&&([v,C]=getMaxMin(i));let B=1e3,I=1e3,Y=-1e3,j=-1e3;for(let n=0;n<d;n++){const s=q*n,p=[],l=[],F=[],m=[];for(let c=0;c<r;c++){const z=k*c;let o=b+z;const u=x+s;let M=255;const U=a[n*r+c];U==null&&(M=0);const D=255*(U-h)/(w-h);let T=0;if(i){const X=i[n*r+c];X==null&&(M=0),T=255*(X-v)/(C-v)}o<-180||o>180?(o=mix(o+180,360)-180,p.push(o,u),l.push(D,T,0,M)):(F.push(o,u),m.push(D,T,0,M),g&&o===180&&(p.push(o*-1,u),l.push(D,T,0,M),B=-180)),B>=o&&(B=o),Y<=o&&(Y=o),I>=u&&(I=u),j<=u&&(j=u),G.push(c/e,n/t)}S=S.concat(p.concat(F)),_=_.concat(l.concat(m)),R=[B,I,Y,j]}for(let n=0;n<t;n++)for(let s=0;s<e;s++){const p=s+r*n,l=s+r*(n+1),F=s+1+r*(n+1),m=s+1+r*n;N.push(p,l,m),N.push(l,F,m)}return{verticesBuffer:new Float32Array(S),indicesBuffer:new Uint32Array(N),texCoordBuffer:new Float32Array(G),velocityData:new Uint8Array(_),dataExtent:new Float32Array([h,w,v,C]),realExtent:new Float32Array(R)}}self.onmessage=f=>{const e=f.data,t=e[0],a=e[1],i=e[2],[g,b]=e[3],L=e[4],{dataExtent:y,verticesBuffer:x,velocityData:E,indicesBuffer:A,texCoordBuffer:r,realExtent:d}=process(i,g,b,t,a,L);self.postMessage([E.buffer,y.buffer,x.buffer,A.buffer,r.buffer,d.buffer],[E.buffer,y.buffer,x.buffer,A.buffer,r.buffer,d.buffer])};
